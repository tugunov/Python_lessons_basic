# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]
import math

print('==Задача-1==')
print('Из списка целых чисел получить новый список,')
print('элементами которого будут квадратные корни первого списка')
print('при условии существования действительного корня')
print('и при условии целочисленного корня')

# список целочисленных значений сгенерирован алгоритмом из Задачи-3
num_list = [70, -80, -58, 35, 60, 74, 144, -80, -51, -70, 
            -11, -60, 44, -11, 91, 81, -40, 21, 73, -8]

print('Исходный список целых чисел: {}'.format(num_list))
res_list = []

for item in num_list:
    if item >= 0: # условие существования действительного квадратного корня
        sqroot = math.sqrt(item) 
        # сохраняем корень в переменную, чтобы не вычислять 
        # несколько раз одно и то же значение
        if sqroot - (sqroot//1) == 0:
            res_list.append(int(sqroot)) 
            # если число является полным квадратом - 
            # записываем корень в новый список

print('Список целых квадратных корней: {}'.format(res_list))

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)


# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random


# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]
