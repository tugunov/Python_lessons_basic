# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]
import math

print('==Задача-1==')
print('Из списка целых чисел получить новый список,')
print('элементами которого будут квадратные корни первого списка')
print('при условии существования действительного корня')
print('и при условии целочисленного корня')

# список целочисленных значений сгенерирован алгоритмом из Задачи-3
num_list = [70, -80, -58, 35, 60, 74, 144, -80, -51, -70, 
            -11, -60, 44, -11, 91, 81, -40, 21, 73, -8]

print('Исходный список целых чисел: {}'.format(num_list))
res_list = []

for item in num_list:
    if item >= 0: # условие существования действительного квадратного корня
        sqroot = math.sqrt(item) 
        # сохраняем корень в переменную, чтобы не вычислять 
        # несколько раз одно и то же значение
        if sqroot - (sqroot//1) == 0:
            res_list.append(int(sqroot)) 
            # если число является полным квадратом - 
            # записываем корень в новый список

print('Список целых квадратных корней: {}'.format(res_list))

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

print('==Задача-2==')
print('Преобразовать дату формата dd.mm.yyyy в текстовый вид')
# подготовим словари числительных и названий месяца на основе кортежей
day_list = ('первое', 'второе', 'третье', 'четвертое', 'пятое', 
	        'шестое', 'седьмое', 'восьмое', 'девятое', 'десятое',
            'одиннадцатое', 'двенадцатое', 'тринадцатое', 'четырнадцатое', 
            'пятнадцатое', 'шестнадцатое', 'семнадцатое', 'восемнадцатое', 
            'девятнадцатое', 'двадцатое', 'двадцать первое', 'двадцать второе',
            'двадцать третье', 'двадцать четвертое', 'двадцать пятое', 
            'двадцать шестое', 'двадцать седьмое', 'двадцать восьмое', 
            'двадцать девятое', 'тридцатое', 'тридцать первое')
month_list = ('января', 'февраля', 'марта', 'апреля', 'мая', 'июня',
              'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря')

user_date = str(input('Введите дату в формате dd.mm.yyyy:'))

day = int(user_date[:2])
month = int(user_date[3:5])
year = int(user_date[-4:])

print('{} {} {} года'.format(day_list[day-1].title(), 
	   month_list[month-1], year))

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

print('==Задача-3==')
print('Алгоритм, заполняющий список из n элементов ')
print('произвольными целыми числами в диапазоне от -100 до 100')

import random
n = int(input('Введите число элементов списка случайных чисел: '))
num_list = []
for i in range (0, n): # заполняем список десятью элементами
    num_list.append(random.randint(-100, 100))
print('Исходный список: {}'.format(num_list))

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

print('==Задача-4==')
print('==Пункт А. Неповторяющиеся элементы исходного списка==')
list1 = [1, 2, 4, 5, 6, 2, 5, 2]
list2 = []
print('Исходный список: {}'.format(list1))
set_1 = set(list1) # элементы списка 1 запишутся в множество каждый в одном экземпляре
for i in set_1:
    list2.append(i) #запишем элементы множества в список 2

print('Новый список: {}'.format(list2))

print('==Пункт Б. Элементы исходного списка, которые не имеют в нем повторений==')
print('Исходный список: {}'.format(list1))
list3 = []

for item2 in list2:
    count = 0
    for item1 in list1:
        if item1 == item2:
            count += 1 
            # для каждого элемента списка 2 из пункта А 
            # считаем количество вхождений в список 1
    if count == 1:
        list3.append(item2) 
        # те элементы, у которых только одно вхождение, 
        # пишем в результирующий список 3

print('Новый список: {}'.format(list3))
